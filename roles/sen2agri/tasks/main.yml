# Download and install sen2agri
#
# We assume that the install files are available
# at the remote site. If not add a task to copy the files, e.g.
## - name: Copy sen2agri install files
##   copy:
##     src: "{{ your local path }}/Sen2Agri-package-{{ sen2agri_version}}.zip"
##     dest: "{{ remote_install_path }}"

- name: create folder for sen2agri unzipped files
  file:
    path: "{{ remote_install_path }}"
    state: directory
    mode: '0774'

- name: unzip sen2agri package
  unarchive:
    src: "{{ remote_install_source }}/Sen2Agri-package-{{ sen2agri_version}}.zip"
    dest: "{{ remote_install_path }}"
    remote_src: yes

- name: copy srmt and swbd
  copy:
    src: "{{ item }}"
    dest: "{{ remote_install_path }}/Sen2AgriDistribution/"
    remote_src: yes
    force: no
  with_items:
    - "{{ remote_install_source }}/srtm.zip"
    - "{{ remote_install_source }}/swbd.zip"

# Need to delete the folder otherwise the next script will fail
- name: Ansible delete folder
  file:
    path: /usr/share/sen2agri/sen2agri-services
    state: absent
  become: yes

# Maybe it is better to use "expect" instead of "shell"
- name: install sen2agri
  shell: cd {{ remote_install_path }}/Sen2AgriDistribution/install_script && echo "2" | sudo ./sen2agriPlatformInstallAndConfig.sh
  become: yes

# Configure user for sentinal data download
- name: set account for sentinal
  become: yes
  become_user: sen2agri-service
  shell: psql sen2agri -c "UPDATE datasource SET username='{{ sentinal_user }}', passwrd='{{ sentinal_pass }}' WHERE id=3;"

- name: L3 Update for DB
  become: yes
  become_user: sen2agri-service
  shell: "{{ item }}"
  with_items:
    - psql sen2agri -c "UPDATE config SET value='/mnt/archive/l3products/{site}/{processor}/' WHERE key='archiver.archive_path';"
    - psql sen2agri -c "UPDATE config SET value='/mnt/archive/l3products/{site}/{processor}/' WHERE key='processor.l2s1.path';"
    - psql sen2agri -c "UPDATE config SET value='/mnt/archive/l3products/{site}/{processor}/' WHERE key='s1.preprocessing.path';"
    - psql sen2agri -c "UPDATE config SET value='/mnt/archive/l3products/L3B_GeneratedModels/' WHERE key='processor.l3b.lai.modelsfolder';"

- name: configure Cloud optimized Geotiff output -- cog
  become: yes
  become_user: sen2agri-service
  shell:  "{{ item }}"
  with_items:
    - psql sen2agri -c "UPDATE config SET value=1 WHERE key='demmaccs.cog-tiffs';"
    - psql sen2agri -c "UPDATE config SET value=1 WHERE key='processor.l3a.cloud_optimized_geotiff_output';"
    - psql sen2agri -c "UPDATE config SET value=1 WHERE key='processor.l3e.cloud_optimized_geotiff_output';"
    - psql sen2agri -c "UPDATE config SET value=1 WHERE key='processor.l4a.cloud_optimized_geotiff_output';"
    - psql sen2agri -c "UPDATE config SET value=1 WHERE key='processor.l4b.cloud_optimized_geotiff_output';"

- name: configure demmacs_launcher for more processes 1
  replace:
    path: /usr/share/sen2agri/sen2agri-demmaccs/demmaccs_launcher.py
    regexp: '"--processes-number-maccs", "\d"'
    replace: '"--processes-number-maccs", "10"'
    backup: yes
  become: yes

- name: configure demmacs_launcher for more processes 2
  replace:
    path: /usr/share/sen2agri/sen2agri-demmaccs/demmaccs_launcher.py
    regexp: "'--processes-number', default=2"
    replace: "'--processes-number', default=10"
    backup: yes
  become: yes

- name: fix apache settings to give access to nfs
  user:
    name: apache
    group: GWDG
    groups: GWDG2
  become: yes

- name: copy apache nfs config to give apache access to the nfs mount
  copy:
    src: roles/sen2agri/files/nfs_apache.conf
    dest: /etc/httpd/conf.d/
    mode: '0644'
  become: yes

- name: restart httpd due to the change in the apache config
  service:
    name: httpd
    state: reloaded
  become: yes
